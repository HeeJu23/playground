{"ast":null,"code":"var _jsxFileName = \"/Users/minwoo/workspace/codes/React/start/src/App.js\";\nimport loginpage from \"./loginpage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"loginpage\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\n\n// import logo from './logo.svg';\n// import './App.css';\n// import React, {useEffect, useState} from \"react\";\n\n// const User = {\n//   id: 'skaalsdn94',\n//   pw: 'mandoo1229^^'\n// }\n\n// export default function Login(){\n//   const [id, setId] = useState('');\n//   const [pw, setPw] = useState('');\n\n//   const [idValid, setIdValid] = useState(false);\n//   const [pwValid, setPwValid] = useState(false);\n//   const [notAllow, setNotAllow] = useState(true);\n\n//   useEffect(() => {\n//       if(idValid && pwValid) {\n//         setNotAllow(false);\n//         return;\n//       }\n//       setNotAllow(true);\n//     }, [idValid, pwValid]);\n\n//   const handleId = (e) => {\n//       setId(e.target.value);\n//       const regex = /^[a-zA-Z0-9]{4,}$/;\n//       // const regex= /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/;\n//       // if(regex.test(e.target.value\\)){\n//           if (regex.test(id)) {\n//           setIdValid(true);\n//       } else{\n//           setIdValid(false);\n//       }\n//   };\n\n//   const handlePw = (e) => {\n//       setPw(e.target.value);\n//       const regex = /^(?=.*[a-zA-z])(?=.*[0-9])(?=.*[$`~!@$!%*#^?&\\\\(\\\\)\\-_=+])(?!.*[^a-zA-z0-9$`~!@$!%*#^?&\\\\(\\\\)\\-_=+]).{8,20}$/;\n//       if (regex.test(e.target.value)) {\n//         setPwValid(true);\n//       } else {\n//         setPwValid(false);\n//       }\n//     };\n\n//     const onClickConfirmButton = () => {\n//       if(id === User.id && pw === User.pw) {\n//         alert('로그인에 성공했습니다.')\n//       } else {\n//         alert(\"등록되지 않은 회원입니다.\");\n//       }\n//     }\n\n//   return (\n//     <div class=\"App\">\n//       <div class=\"logo\">\n//       <lable class=\"Rectangle16\"></lable>\n//       <div class=\"outbox\"></div>\n//       <div class=\" main\">PLAY</div>\n//       <div class=\" main2\">GROUND</div>\n//       <div class=\" serve\">플레이그라운드에 오신 것을 환영합니다.</div>\n//       <div class=\" login\">로그인</div>\n//       <button onClick={onClickConfirmButton} disabled={notAllow} class=\" playlogin \">PLAY LOGIN</button>\n//       <div class=\" Rectingle10\"></div>\n//       <button onclick=\"https://nid.naver.com/user2/V2Join?m=agree&lang=ko_KR\" className=\"new\">회 원 가 입</button>\n//       <a href=\"https://nid.naver.com/user2/help/idInquiry?lang=ko_KR\" class=\" idfind\">아이디 찾기</a>\n//       <a href=\"https://nid.naver.com/user2/help/pwInquiry?lang=ko_KR\" class=\" passwordfind\">비밀번호 찾기</a>\n//       <div class=\" i\">|</div>\n//       <div class=\" group16\"></div>\n//       <input class=\" idinput\" type=\"text\" placeholder=\"아이디\" value={id} onChange={handleId}></input>\n//       <input class=\" passwordinput\" type=\"password\" placeholder=\"비밀번호\" value={pw} onChange={handlePw}></input>\n//       </div>\n//     </div>\n//   );\n//   }\n\n// // export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["loginpage","jsxDEV","_jsxDEV","App","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/minwoo/workspace/codes/React/start/src/App.js"],"sourcesContent":["import loginpage from \"./loginpage\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <loginpage/>\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n\n\n// import logo from './logo.svg';\n// import './App.css';\n// import React, {useEffect, useState} from \"react\";\n\n// const User = {\n//   id: 'skaalsdn94',\n//   pw: 'mandoo1229^^'\n// }\n\n// export default function Login(){\n//   const [id, setId] = useState('');\n//   const [pw, setPw] = useState('');\n\n//   const [idValid, setIdValid] = useState(false);\n//   const [pwValid, setPwValid] = useState(false);\n//   const [notAllow, setNotAllow] = useState(true);\n\n//   useEffect(() => {\n//       if(idValid && pwValid) {\n//         setNotAllow(false);\n//         return;\n//       }\n//       setNotAllow(true);\n//     }, [idValid, pwValid]);\n\n//   const handleId = (e) => {\n//       setId(e.target.value);\n//       const regex = /^[a-zA-Z0-9]{4,}$/;\n//       // const regex= /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/;\n//       // if(regex.test(e.target.value\\)){\n//           if (regex.test(id)) {\n//           setIdValid(true);\n//       } else{\n//           setIdValid(false);\n//       }\n//   };\n\n//   const handlePw = (e) => {\n//       setPw(e.target.value);\n//       const regex = /^(?=.*[a-zA-z])(?=.*[0-9])(?=.*[$`~!@$!%*#^?&\\\\(\\\\)\\-_=+])(?!.*[^a-zA-z0-9$`~!@$!%*#^?&\\\\(\\\\)\\-_=+]).{8,20}$/;\n//       if (regex.test(e.target.value)) {\n//         setPwValid(true);\n//       } else {\n//         setPwValid(false);\n//       }\n//     };\n\n//     const onClickConfirmButton = () => {\n//       if(id === User.id && pw === User.pw) {\n//         alert('로그인에 성공했습니다.')\n//       } else {\n//         alert(\"등록되지 않은 회원입니다.\");\n//       }\n//     }\n\n//   return (\n//     <div class=\"App\">\n//       <div class=\"logo\">\n//       <lable class=\"Rectangle16\"></lable>\n//       <div class=\"outbox\"></div>\n//       <div class=\" main\">PLAY</div>\n//       <div class=\" main2\">GROUND</div>\n//       <div class=\" serve\">플레이그라운드에 오신 것을 환영합니다.</div>\n//       <div class=\" login\">로그인</div>\n//       <button onClick={onClickConfirmButton} disabled={notAllow} class=\" playlogin \">PLAY LOGIN</button>\n//       <div class=\" Rectingle10\"></div>\n//       <button onclick=\"https://nid.naver.com/user2/V2Join?m=agree&lang=ko_KR\" className=\"new\">회 원 가 입</button>\n//       <a href=\"https://nid.naver.com/user2/help/idInquiry?lang=ko_KR\" class=\" idfind\">아이디 찾기</a>\n//       <a href=\"https://nid.naver.com/user2/help/pwInquiry?lang=ko_KR\" class=\" passwordfind\">비밀번호 찾기</a>\n//       <div class=\" i\">|</div>\n//       <div class=\" group16\"></div>\n//       <input class=\" idinput\" type=\"text\" placeholder=\"아이디\" value={id} onChange={handleId}></input>\n//       <input class=\" passwordinput\" type=\"password\" placeholder=\"비밀번호\" value={pw} onChange={handlePw}></input>\n//       </div>\n//     </div>\n//   );\n//   }\n\n// // export default App;\n"],"mappings":";AAAA,OAAOA,SAAS,MAAM,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnC,SAASC,GAAGA,CAAA,EAAG;EACb,oBACED,OAAA;IAAKE,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBH,OAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAY;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACR;AAEV;AAACC,EAAA,GANQP,GAAG;AAQZ,eAAeA,GAAG;;AAOlB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}