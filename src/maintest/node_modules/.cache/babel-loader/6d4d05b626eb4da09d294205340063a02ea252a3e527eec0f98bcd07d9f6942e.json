{"ast":null,"code":"var _jsxFileName = \"/Users/minwoo/workspace/codes/React/start/src/loginpage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst User = {\n  id: 'skaalsdn94',\n  pw: 'mandoo1229^^'\n};\nexport default function Login() {\n  _s();\n  const [id, setId] = useState('');\n  const [pw, setPw] = useState('');\n  const [idValid, setIdValid] = useState(false);\n  const [pwValid, setPwValid] = useState(false);\n  const [notAllow, setNotAllow] = useState(true);\n  useEffect(() => {\n    if (idValid && pwValid) {\n      setNotAllow(false);\n      return;\n    }\n    setNotAllow(true);\n  }, [idValid, pwValid]);\n  const handleId = e => {\n    setId(e.target.value);\n    const regex = /^[a-zA-Z0-9]{4,}$/;\n    // const regex= /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/;\n    // if(regex.test(e.target.value\\)){\n    if (regex.test(id)) {\n      setIdValid(true);\n    } else {\n      setIdValid(false);\n    }\n  };\n  const handlePw = e => {\n    setPw(e.target.value);\n    const regex = /^(?=.*[a-zA-z])(?=.*[0-9])(?=.*[$`~!@$!%*#^?&\\\\(\\\\)\\-_=+])(?!.*[^a-zA-z0-9$`~!@$!%*#^?&\\\\(\\\\)\\-_=+]).{8,20}$/;\n    if (regex.test(e.target.value)) {\n      setPwValid(true);\n    } else {\n      setPwValid(false);\n    }\n  };\n  const onClickConfirmButton = () => {\n    if (id === User.id && pw === User.pw) {\n      alert('로그인에 성공했습니다.');\n    } else {\n      alert(\"아이디 또는 비밀번호가 일치하지 않습니다.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contenWrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputTitle\",\n        children: \"\\uC544\\uC774\\uB514\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputWrap\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          placeholder: \"\\uC544\\uC774\\uB514\",\n          value: id,\n          onChange: handleId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"errorMessageWrap\",\n        children: !idValid && id.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"\\uC62C\\uBC14\\uB978 \\uC544\\uC774\\uB514\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputTitle\",\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputWrap\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n          type: \"password\",\n          value: pw,\n          onChange: handlePw\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"errorMessageWrap\",\n        children: !pwValid && pw.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"\\uC601\\uBB38, \\uC22B\\uC790, \\uD2B9\\uC218\\uBB38\\uC790 \\uD3EC\\uD568 8\\uC790 \\uC774\\uC0C1 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClickConfirmButton,\n        disabled: notAllow,\n        className: \"bottomButton\",\n        children: \"PLAYLOGIN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"7n50ow/km5CVxOPvXV3mczBzWjo=\");\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","User","id","pw","Login","_s","setId","setPw","idValid","setIdValid","pwValid","setPwValid","notAllow","setNotAllow","handleId","e","target","value","regex","test","handlePw","onClickConfirmButton","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","length","type","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/minwoo/workspace/codes/React/start/src/loginpage.jsx"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\n\nconst User = {\n    id: 'skaalsdn94',\n    pw: 'mandoo1229^^'\n  }\n\nexport default function Login(){\n    const [id, setId] = useState('');\n    const [pw, setPw] = useState('');\n\n    const [idValid, setIdValid] = useState(false);\n    const [pwValid, setPwValid] = useState(false);\n    const [notAllow, setNotAllow] = useState(true);\n\n    useEffect(() => {\n        if(idValid && pwValid) {\n          setNotAllow(false);\n          return;\n        }\n        setNotAllow(true);\n      }, [idValid, pwValid]);\n\n    const handleId = (e) => {\n        setId(e.target.value);\n        const regex = /^[a-zA-Z0-9]{4,}$/;\n        // const regex= /^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/;\n        // if(regex.test(e.target.value\\)){\n            if (regex.test(id)) {\n            setIdValid(true);\n        } else{\n            setIdValid(false);\n        }\n    };\n\n    const handlePw = (e) => {\n        setPw(e.target.value);\n        const regex = /^(?=.*[a-zA-z])(?=.*[0-9])(?=.*[$`~!@$!%*#^?&\\\\(\\\\)\\-_=+])(?!.*[^a-zA-z0-9$`~!@$!%*#^?&\\\\(\\\\)\\-_=+]).{8,20}$/;\n        if (regex.test(e.target.value)) {\n          setPwValid(true);\n        } else {\n          setPwValid(false);\n        }\n      };\n\n      const onClickConfirmButton = () => {\n        if(id === User.id && pw === User.pw) {\n          alert('로그인에 성공했습니다.')\n        } else {\n          alert(\"아이디 또는 비밀번호가 일치하지 않습니다.\");\n        }\n      }\n\n    return(\n        <div className=\"page\">\n            <div className=\"contenWrap\">\n                <div className=\"inputTitle\">아이디</div>\n                <div className='inputWrap'>\n                    <input className='input'\n                    placeholder=\"아이디\"\n                    value={id}\n                    onChange={handleId}/>\n                </div>\n                <div className=\"errorMessageWrap\">\n                {!idValid && id.length > 0 && (\n              <div>올바른 아이디를 입력해주세요.</div>\n            )}\n                    \n                </div>\n\n                <div className=\"inputTitle\">비밀번호</div>\n                <div className=\"inputWrap\">\n                    <input className=\"input\"\n                    placeholder=\"비밀번호\"\n                    type=\"password\"\n                    value={pw}\n                    onChange={handlePw}/>\n                </div>\n                <div className=\"errorMessageWrap\">\n                {!pwValid && pw.length > 0 && (\n              <div>영문, 숫자, 특수문자 포함 8자 이상 입력해주세요.</div>\n            )}\n                </div>\n            </div>\n            <div>\n                <button onClick={onClickConfirmButton} disabled={notAllow} className=\"bottomButton\">\n                    PLAYLOGIN\n                </button>\n            </div>\n        </div>\n    );\n}\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}